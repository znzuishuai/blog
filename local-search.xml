<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>1.17资产架构端口CDN</title>
    <link href="/blog/2025/01/17/1-17%E8%B5%84%E4%BA%A7%E6%9E%B6%E6%9E%84%E7%AB%AF%E5%8F%A3CDN/"/>
    <url>/blog/2025/01/17/1-17%E8%B5%84%E4%BA%A7%E6%9E%B6%E6%9E%84%E7%AB%AF%E5%8F%A3CDN/</url>
    
    <content type="html"><![CDATA[<h1 id="资产架构："><a href="#资产架构：" class="headerlink" title="资产架构："></a>资产架构：</h1><p>其本身意义就是针对同一个事物进行不同地方测试</p><h1 id="WEB单个源码指向安全："><a href="#WEB单个源码指向安全：" class="headerlink" title="WEB单个源码指向安全："></a>WEB单个源码指向安全：</h1><p>通常指代一个主机一个web网站</p><h1 id="WEB多个目录源码安全："><a href="#WEB多个目录源码安全：" class="headerlink" title="WEB多个目录源码安全："></a>WEB多个目录源码安全：</h1><p>多目录源码安全指的是 一个主机下面有多个网站站点</p><h1 id="WEB多个端口源码安全："><a href="#WEB多个端口源码安全：" class="headerlink" title="WEB多个端口源码安全："></a>WEB多个端口源码安全：</h1><p>指的是将不同网站分别架设再一个IP上的不同端口。</p><h1 id="服务器架设多个站点安全："><a href="#服务器架设多个站点安全：" class="headerlink" title="服务器架设多个站点安全："></a>服务器架设多个站点安全：</h1><p>架设第三方插件接口安全【管理方可能为了更多的功能，使用了多个插件，测试可通过对其插件寻查测试，言简意赅就是负担太多，就容易出错】<br><strong>注意：</strong><br>第三方插件接口指的是CMS下面的一些插件，能提高网站的性能，这些插件就可能存在安全隐患<br>服务器架设多个应用安全：指的是例如phpmyadmin这一类的便于管理员管理网站的web应用，这些应用就可能存在漏洞</p><p><strong>目录：</strong><br><strong>bbs.xiaodi8.com dziEt</strong><br><strong>bbs. xiaodi8.com&#x2F;blog wp程序,</strong></p><p><strong>端口：</strong><br><strong>bbs.xiaodi8.com dziEtz</strong><br><strong>bbs.xiaodi8.com:8081 zblog,</strong></p><p><strong>一个网站两个程序任何一个程序出现漏洞都可以进入安全测试</strong></p><p><strong>同服务器：</strong><br><strong>bbs .xiaodi8.com 47.242.117.23</strong><br><strong>edu.xiaodi8.com 47.242.117.23</strong></p><p><strong>对同一目标可通过bbs. xiaodi8.com 尝试对服务Redu.xiaodi8 com进行安全测试</strong></p><p>基于域名解析安全<br>基于服务器本身安全<br>基于服务商信息安全<br>基于管理个人的安全</p><p>阻碍-站库分离<br>阻碍-CDN加速服务：攻击时候很可能攻击其缓存<br>阻碍-负载均衡服务<br>阻碍-WAF应用防火墙<br>阻碍-主机防护防火墙</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>union学习</title>
    <link href="/blog/2025/01/17/union%E5%AD%A6%E4%B9%A0/"/>
    <url>/blog/2025/01/17/union%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>union注入即为用union联合查询来查询指定的数据，需要根据每一步的返回结果来判断和进行下一步操作。此仅为个人的学习笔记。</p><p>结构<br>联合查询的语句结构基本为：</p><p>select a from b union select c from d where e;<br>1<br>union会一次显示两个查询结果，使第一个查询语句作为正常内容，第二个作为查询语句来进行构造。</p><h1 id="第一步：判断类型"><a href="#第一步：判断类型" class="headerlink" title="第一步：判断类型"></a>第一步：判断类型</h1><h2 id="数字型判断"><a href="#数字型判断" class="headerlink" title="数字型判断"></a>数字型判断</h2><p>共分3步判断步骤：<br>1.加单引号，如输入1’，对应的sql为：select * from table where id&#x3D;1’ 这时sql语句出错，程序无法正常从数据库中查询出数据，就会抛出异常。</p><p>2.加and 1&#x3D;1，如输入1 and 1&#x3D;1，对应的sql：select * from table where id&#x3D;1’ and 1&#x3D;1 没有语法错误且逻辑判断为正确，所以返回正常。</p><p>3.加and 1&#x3D;2，如输入1 and 1&#x3D;2，对应的sql：select * from table where id&#x3D;1 and 1&#x3D;2 没有语法错误但是逻辑判断为假，所以返回错误。</p><p>若满足上述步骤，则注入类型为数字型。</p><h2 id="字符型判断"><a href="#字符型判断" class="headerlink" title="字符型判断"></a>字符型判断</h2><p>也分3步。</p><p>1.加单引号，对应的sql语句由于加单引号后变成三个单引号，则无法执行，程序会报错；</p><p>2.输入x’ and ‘1’&#x3D;’1，对应的Sql 语句：select * from table where id &#x3D; ‘x’ and ‘1’&#x3D;‘1’,语法正确，逻辑判断正确，所以返回正确。</p><p>3.输入x’and ‘1’&#x3D;’2,对应的Sql 语句：select * from where id &#x3D; ‘x’ and ‘1’&#x3D;‘2’，<br>语法正确，但逻辑判断错误，所以返回正确。</p><p>若满足上述步骤，则注入类型为字符型。</p><p>接下来的步骤均假设注入类型为字符型，开始union注入的几大步骤：</p><h1 id="第二步：判断字段数"><a href="#第二步：判断字段数" class="headerlink" title="第二步：判断字段数"></a>第二步：判断字段数</h1><p>1.union有严格的约束条件，必须保证字段数一致，即两个查询结果有相同的列数，因此我们要对字段数进行判断。</p><p>2.可以使用order by number ，其作用为输出第number列。如：</p><p>1’ order by 1 –+<br>1<br>3.一直增加number的数值直到报错，则前一位数字即为字段数。</p><h1 id="第三步：判断回显点"><a href="#第三步：判断回显点" class="headerlink" title="第三步：判断回显点"></a>第三步：判断回显点</h1><p>1.判断回显点即为判断在哪个字段出会输出有效信息，可以输入如</p><p>第一种写法：</p><p>1’ union select 1,2,3,…… limit 1,1 –+</p><p>第二种写法：</p><p>-1’ union select 1,2,3,…… –+</p><p>1<br>2<br>3<br>4<br>5<br>联合查询的输出是严格按照顺序进行的，因此当id&#x3D;1存在时会在第0行输出第一个sql语句查询到的结果，所以我们输入的数字就到了下一行。</p><p>其中：<br>第一种方法中 limit n,m 的作用为从第n行开始显示m行内容；<br>第二种方法使id&#x3D;-1直接使查询结果为空，这样，就不会占用第0行。</p><p>2.找到回显字段后，就可以把SQL语句写在该位置，相应的结果也会输出。</p><h1 id="第四步：获得数据库库名"><a href="#第四步：获得数据库库名" class="headerlink" title="第四步：获得数据库库名"></a>第四步：获得数据库库名</h1><p>1.在可以回显的位置输入database()可获得当前数据库名。假设2位置为回显的位置，如：</p><p>-1’ union select 1,database(),…… –+</p><p>1<br>2<br>2.可以使用group_concat() 将所有内容写入一行并输出。</p><h1 id="第五步：获得表名"><a href="#第五步：获得表名" class="headerlink" title="第五步：获得表名"></a>第五步：获得表名</h1><p>利用的查询是：</p><p>(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;’xxx’ )<br>1<br>假设是在2为&#x3D;位置回显，使用语句：</p><blockquote><p>-1’ union select 1,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;’xxx’ ) –+<br>1<br>其中：information_schema是mysql自带的库，记录了该数据库所有的表名和字段名，该句的含义为：查找数据库中xxx库下的所有表名，group_concat() 将所有内容写入一行并输出。</p></blockquote><h1 id="第六步：获得字段名"><a href="#第六步：获得字段名" class="headerlink" title="第六步：获得字段名"></a>第六步：获得字段名</h1><p>同上，只需要一条语句：</p><blockquote><p>-1’ union select 1,(select group_concat(column_name) from information_schema.columns where table_schema&#x3D;‘xxx’ and<br>table_name&#x3D;‘xxx’) –+<br>1<br>2<br>即为查询数据库xxx下表xxx中的所有字段.<br>其中：Column_name 为字段&#x2F;列名称。</p></blockquote><p>最后：查数据<br>经过上述六步，获得了库名，表名，字段名后，在可以回显的位置输入SQL语句即可。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数据库的基础知识</title>
    <link href="/blog/2025/01/17/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/blog/2025/01/17/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p><strong>一、字段：某一个事物的一个特征，或者说是属性</strong><br><img src="https://i-blog.csdnimg.cn/blog_migrate/855b42ff8fae4f4e37efe0975aead04d.png" alt="在这里插入图片描述"><br>在我们学<a href="https://so.csdn.net/so/search?q=vb&spm=1001.2101.3001.7020">vb</a>时，总是用到控件的各种属性，比如name属性、captain属性、width属性等属性。类似，在这里的某一个字段就是对“员工“控件中的属性。</p><p><strong>二、记录（元组）：事物特征的组合，可以描述一个具体的事物。</strong><br><img src="https://i-blog.csdnimg.cn/blog_migrate/658e8de2169845da00d8233a9d409228.png" alt="在这里插入图片描述"><br>在vb中当我们将一个控件的所有的属性都设置好后，我们就可以对整个控件的样子有个一详细的了解。在<a href="https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E5%BA%93&spm=1001.2101.3001.7020">数据库</a>中也是这样，当我们在完成一条记录以后，一个员工的详细信息也就清楚了。元组是记录的另个一称呼。</p><p><strong>三、表：记录的组合 表示同一类事物的组合</strong><br><img src="https://i-blog.csdnimg.cn/blog_migrate/a8c3e5e468eb297826a2ff1f8b7cbf30.png" alt="在这里插入图片描述"><br>表，相当于具有相似特征事物的一个集合。如同vb中许多具有具体属性的textbox控件。</p><p><strong>四、列：字段的另一种称谓</strong></p><p><strong>五、元组：记录的另一种称谓</strong></p><p><strong>六、主键：能唯一标识信息的事物</strong><br><img src="https://i-blog.csdnimg.cn/blog_migrate/f9f304b6a8bc4d6dc4a84d0c545d6501.png" alt="在这里插入图片描述"><br>在说主键之前，先看上面一个表格，上述格式可以存储信息，但是某一天当出现两个姓名，性别、年龄都相同的张三时，就无法辨别，我们管这种现象叫做冗余，并且这两信息就无法辨别，所以这是就需要设置一个特定的东西来唯一的标识信息。所以我们就用编号来唯一标识员工的信息。那么我们管这个能唯一标识信息的事物叫做主键。即此表格的编号是主键。</p><p><strong>七、外键：一个执行另个一个表的指针</strong></p><p><strong>在讨论外键之前，我们先看看先看看下面的图。</strong><br><img src="https://i-blog.csdnimg.cn/blog_migrate/f06a9158247649b250dda7a956a8b86e.png" alt="在这里插入图片描述"><br>当在员工信息表中在填上部门、部门人数、部门地址等几个属性后。你发现了什么问题。或者说能不能把员工的信息和部门信息放到一起？</p><p>不能！！为什么？因为从前三名可以看出，如果几个人都属于一个部门，那么部门，人数，部门地址信息重复了三次，所以当有大量的人同属一个部门时再次会造成信息冗余。</p><p>现在我们该怎么办呢——看下表：<br><img src="https://i-blog.csdnimg.cn/blog_migrate/d52da7a4ae09cd25fc41b421b79d5f6e.png" alt="在这里插入图片描述"><br>对，就是通过将连个信息表分开的方法，你看这样的话，部门信息的输入工作了少多了吧。但是当员工信息和部门信息两个表分开来写时，的确减少的信息冗余，但是如何建立关系呢？这时我们可以通过部门编号建立关系，此时的“部门编号”就是“员工信息”表（不是“部门信息”表）的关系链——<a href="https://so.csdn.net/so/search?q=%E5%A4%96%E9%94%AE&spm=1001.2101.3001.7020">外键</a>。（注意在两个表分开写后，我们为“部门信息”增加一个主键“部门编号”当然如果不增加的话，部门名称同样可以成为“部门信息”表的主键）</p><p>此时的外键如同指向“部门信息”表中某一具体记录的地址指针（不懂指针的宝宝请暂时飘过），通过员工对应“指针”去部门信息表找对应的部门具体信息。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.17题解</title>
    <link href="/blog/2025/01/17/1-17%E9%A2%98%E8%A7%A3/"/>
    <url>/blog/2025/01/17/1-17%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117132437440.png" alt="image-20250117132437440"></p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117141051064.png" alt="image-20250117141051064"></p><p>用万能密码     ‘or’1’&#x3D;’1’  –+</p><p>flag<br><br>ctfshow{06d5095f-dcd1-4657-82aa-9477c05502af}</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117142219082.png" alt="image-20250117142219082"></p><p>查数据库</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117145725684.png" alt="image-20250117145725684"></p><p>查表名</p><p>-1’ union  select  1,(select  group_concat(table_name)  from  information_schema.tables   where  table_schema&#x3D;’ctfshow_web’)  –+</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117150042430.png" alt="image-20250117150042430"></p><p>查列名</p><p>-1’ union select 1,group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;’ctfshow_user’ –+</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117150734228.png" alt="image-20250117150734228"></p><p>查数据</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117151213098.png" alt="image-20250117151213098"></p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117155447415.png" alt="image-20250117155447415"></p><p>判断出来了回显点已经</p><p>查到数据库名是这个</p><p>ctfshow_web</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117155829055.png" alt="image-20250117155829055"></p><p>查表名</p><p>得到</p><p>ctfshow_user,ctfshow_user2,ctfshow_user3</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117160048322.png" alt="image-20250117160048322"></p><p>2，3中的一样</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117160254447.png" alt="image-20250117160254447"></p><p>列名也找出来了</p><p>-1’ union select 1,2,group_concat(password) from ctfshow_user3 –+</p><p>user2里面没有</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117160748487.png" alt="image-20250117160748487"></p><p>得到</p><h1 id="四"><a href="#四" class="headerlink" title="四"></a>四</h1><p>不是sql了</p><p>因为我查回显点连1都显示错误了，应该还没有学到那里的知识点</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117162911943.png" alt="image-20250117162911943"></p><p>vim之前学过</p><p>vim泄露会有三个文件</p><p>.swp   .swo   .swn</p><p>访问一下index.php.swp</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117163156275.png" alt="image-20250117163156275"></p><p>得到flag</p><h1 id="五"><a href="#五" class="headerlink" title="五"></a>五</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117163233984.png" alt="image-20250117163233984"></p><p>cookie</p><p>经过之前的经验，应该是先抓包看看</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117163513400.png" alt="image-20250117163513400"></p><p>不大像答案的格式</p><p>弄进去试试</p><p>果然不是</p><p>根据昨天视频所学，这个像是URL编码，需要解码一下</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117164131432.png" alt="image-20250117164131432"></p><h1 id="六"><a href="#六" class="headerlink" title="六"></a>六</h1><p>来一道密码的题</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117164535767.png" alt="image-20250117164535767"></p><p>打开是颜文字</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117164611154.png" alt="image-20250117164611154"></p><p>全是颜文字，可以直接在控制台上做</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117165519979.png" alt="image-20250117165519979"></p><p>得到</p><h1 id="七"><a href="#七" class="headerlink" title="七"></a>七</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117173814546.png" alt="image-20250117173814546"></p><p>获得了6个文件</p><p>都放到winhex看看</p><p>文件头均不对</p><p>开始改</p><p>文件头补充：</p><p>图像文件<br>JPEG: (文件头 FF D8 FF), (文件尾 FF D9)<br>TGA:未压缩: (文件头 00 00 02 00)；RLE压缩: (文件头 00 00 10 00 00)<br>PNG: (文件头 89 50 4E 47 0D 0A 1A 0A), (文件尾 AE 42 60 82)<br>GIF: (文件头 47 49 46 38 39(37) 61), (文件尾 00 3B)BMP: (文件头 42 4D)<br>TIFF: (文件头 49 49 2A 00)<br>ICO: (文件头 00 00 01 00)AdobePhotoshop(PSD): (文件头 38 42 50 53)</p><p>Office文件<br>MS Word&#x2F;Excel: (文件头 D0 CF 11 E0)<br>MS Access: (文件头 53 74 61 6E 64 61 72 64 20 4A)<br>WordPerfect: (文件头 FF 57 50 43)<br>Adobe Acrobat (PDF): (文件头 25 50 44 46 2D 31 2E)<br>Visio: (文件头 D0 CF 11 E0 A1 B1 1A E1)<br>Email (EML): (文件头 44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A)<br>Outlook Express: (文件头 CF AD 12 FE C5 FD 74 6F)<br>Outlook (.pst): (文件头 21 42 44 4E)<br>RTF: (文件头 7B 5C 72 74 66)<br>TXT:Unicode: (文件头 FE FF)；Big Endian: (文件头 FF FE)；UTF-8: (文件头 EF BB BF)</p><p>压缩包文件<br>ZIP: (文件头 50 4B 03 04), (文件尾 50 4B)<br>RAR: (文件头 52 61 72 21)</p><p>音频文件<br>Wave: (文件头 57 41 56 45)<br>MIDI: (文件头 4D 54 68 64)<br>AAC: (文件头 FF F1(9))</p><p>视频文件<br>AVI: (文件头 41 56 49 20)<br>Real Audio: (文件头 2E 72 61 FD)<br>Real Media: (文件头 2E 52 4D 46)<br>MPEG: (文件头 00 00 01 BA(3))<br>Quicktime: (文件头 6D 6F 6F 76)<br>Windows Media: (文件头 30 26 B2 75 8E 66 CF 11)</p><p>编码文件<br>XML: (文件头 3C 3F 78 6D 6C)<br>HTML: (文件头 68 74 6D 6C 3E)其他类型：<br>Windows Certificate: (文件头 30 82 03 C9)<br>CAD: (文件头 41 43 31 30)<br>Windows Shortcut: (文件头 4C 00 00 00)<br>Windows Registry: (文件头 52 45 47 45 44 49 54 34)<a href="https://so.csdn.net/so/search?q=%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6&spm=1001.2101.3001.7020">音频文件</a>：<br><a href="https://so.csdn.net/so/search?q=MP3&spm=1001.2101.3001.7020">MP3</a>：文件头格式为49 44 33，文件尾格式为FF FB。<br>WAV：文件头格式为52 49 46 46，文件尾格式为3E 00 00 00。</p><p>webp:有RIFF</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117180031948.png" alt="image-20250117180031948"></p><p>六个均是图片，连起来就是答案</p><h1 id="八"><a href="#八" class="headerlink" title="八"></a>八</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117180226002.png" alt="image-20250117180226002"></p><p>包不信的</p><p>放到winhex中看看</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117180326164.png" alt="image-20250117180326164"></p><p>在最下面</p><h1 id="九"><a href="#九" class="headerlink" title="九"></a>九</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117180927148.png" alt="image-20250117180927148"></p><p>打开是个网页蒙了</p><p>回想一下，已经学的东西，bp，githack，dirsearch，查看源代码</p><p>除了githack都试一遍</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117181848758.png" alt="image-20250117181848758"></p><p>有一个机器人</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117181957737.png" alt="image-20250117181957737"></p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117182158079.png" alt="image-20250117182158079"></p><p>炸了，还需要密码</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117182637998.png" alt="image-20250117182637998"></p><p>或许是这个？</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117182719671.png" alt="image-20250117182719671"></p><p>成功</p><h1 id="十"><a href="#十" class="headerlink" title="十"></a>十</h1><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117183358454.png" alt="image-20250117183358454"></p><p>这个也是个网页服了</p><p>试试之前的方法</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117183620773.png" alt="image-20250117183620773"></p><p>但是这些好像都是上面的标题</p><p>可恶，啥也没有</p><p>bp也不可以</p><p>服了，弄了半天，无意间发现鼠标变了，进来，找到个这个</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117183341047.png" alt="image-20250117183341047"></p><p>可是这个链接，在虚拟机和本地都没法进去</p><p>但是</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117184143200.png" alt="image-20250117184143200"></p><p>本地是这样</p><p>哈啊哈，瞟到了提示</p><p>出现了个</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117184338582.png" alt="image-20250117184338582"></p><p>把密码输进去</p><p>ctfshow{f6937d14-08df-46c9-8e4b-6f79861523d5}</p><p>得到了！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>sql注入</title>
    <link href="/blog/2025/01/17/sql%E6%B3%A8%E5%85%A5/"/>
    <url>/blog/2025/01/17/sql%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="sql注入原理"><a href="#sql注入原理" class="headerlink" title="sql注入原理"></a>sql注入原理</h1><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><p>当web应用向后台数据库传递sql语句时进行数据库操作时，如果对用户输入的参数没有经过严格的过滤处理，那么攻击者就可以构造特殊的sql语句，直接输入数据库引擎执行，获取或修改数据库中的数据。</p><p>四个必须掌握的sql语句：增删改查</p><h1 id="sql注入的目的"><a href="#sql注入的目的" class="headerlink" title="sql注入的目的"></a>sql注入的目的</h1><p>查询数据</p><p>读写文件</p><p>执行命令</p><h1 id="本质："><a href="#本质：" class="headerlink" title="本质："></a>本质：</h1><p>把用户的输入数据当作代码执行</p><h1 id="两个关键点："><a href="#两个关键点：" class="headerlink" title="两个关键点："></a>两个关键点：</h1><h2 id="所有的漏洞都有条件："><a href="#所有的漏洞都有条件：" class="headerlink" title="所有的漏洞都有条件："></a>所有的漏洞都有条件：</h2><p>1.用户能够控制输入的内容</p><p>2.数据库能够执行用户输入的内容</p><h1 id="预编译"><a href="#预编译" class="headerlink" title="预编译"></a>预编译</h1><p>将输入和代码进行分离，这样sql语句就不会执行</p><h1 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h1><h2 id="select-from-users-where-id-1"><a href="#select-from-users-where-id-1" class="headerlink" title="select *from users where  id &#x3D;1"></a>select *from users where  id &#x3D;1</h2><p>select  +列名（*代表所有）from+表名   where +条件语句（where可加可不加） </p><p>从user表格，查询所有包含id为1的</p><p>select * from users where id&#x3D;(select id from users where username&#x3D;(‘admin’))</p><p>优先（）查询括号内</p><h1 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h1><p>用来分组和order by 功能一样</p><h1 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h1><p>用来限制输出内容数量</p><p>select * from  users limit 1,3</p><p>从第一行到第三行</p><h1 id="and-or"><a href="#and-or" class="headerlink" title="and or"></a>and or</h1><p>与或</p><p>直接跳过</p><h1 id="group-concat"><a href="#group-concat" class="headerlink" title="group_concat"></a>group_concat</h1><p>多行显示在一行</p><h1 id="SQL的危害"><a href="#SQL的危害" class="headerlink" title="SQL的危害"></a>SQL的危害</h1><p>盗取网站的敏感信息</p><p>绕过网站后台的认证          万能密码：’ or 1&#x3D;1#        或者’or ‘（存在漏洞才能用）  ‘1’&#x3D;’1’# </p><p>#：是注释的意思</p><p>%23  –+   –空格   –qwer  也是注释</p><p>注释是写给人看的，#后面的就直接不看了</p><p>SELECT * FROM admin  WHERE username &#x3D;’’   and  password &#x3D; ‘’;</p><p>这是完整的</p><p>但是在usrname里加上万能密码   SELECT * FROM admin  WHERE username &#x3D;’’  变这样，不管后面密码了</p><p>解释万能密码    ‘’  or  1&#x3D;1</p><p>​                             ‘’用户名为空  所以是F  or   1&#x3D;1为T所以这个sql语句为真     SELECT * FROM admin  WHERE username &#x3D;’’   and  password &#x3D; ‘’;所以会跳过  后台认证</p><h1 id="SQL的注入分类"><a href="#SQL的注入分类" class="headerlink" title="SQL的注入分类"></a>SQL的注入分类</h1><h2 id="位置分类："><a href="#位置分类：" class="headerlink" title="位置分类："></a>位置分类：</h2><p>get  post  head头注入</p><h2 id="反馈结果分类："><a href="#反馈结果分类：" class="headerlink" title="反馈结果分类："></a>反馈结果分类：</h2><p>有回显型（显错注入）     无回显（盲注）</p><h2 id="数据类型分类"><a href="#数据类型分类" class="headerlink" title="数据类型分类"></a>数据类型分类</h2><p>数字型：输入的参数为整型，如id 年龄 页码  </p><p>*<strong>有且仅有  0123456789除了这些之外的都叫字符型</strong></p><p>字符型：输入的参数为字符串</p><p>**<u>数字型与字符型的区别</u>：**数字型不需要闭合，字符型一般需要</p><h1 id="SQL注入的流程"><a href="#SQL注入的流程" class="headerlink" title="SQL注入的流程"></a>SQL注入的流程</h1><h2 id="1-寻找注入点"><a href="#1-寻找注入点" class="headerlink" title="1.寻找注入点"></a>1.寻找注入点</h2><p>​         SQL注入    SQL和数据库有交互（登录  注册   搜索框）</p><h2 id="2-判断闭合方式"><a href="#2-判断闭合方式" class="headerlink" title="2.判断闭合方式"></a>2.判断闭合方式</h2><h3 id="1-先判断是数字还是字符"><a href="#1-先判断是数字还是字符" class="headerlink" title="1.先判断是数字还是字符"></a>1.先判断是数字还是字符</h3><p>​            例子     输入？id&#x3D;1asdf，假设是数字型，就会报错，就是数字型，不报错就是字符</p><h3 id="2-再判断闭合方式"><a href="#2-再判断闭合方式" class="headerlink" title="2.再判断闭合方式"></a>2.再判断闭合方式</h3><p>​            ？id&#x3D;1asdf  先加’，没有反应换成”</p><p>‘   ‘       “     “   {    }     [    ]都是成双成对出现的    “iasdf”LIMT   0,1’这里面的“单双引号，因为如果是双的话，会多出来一个’无法解释</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250117115321308.png" alt="image-20250117115321308"></p><p>最外面和最里面的单引号是弄起来的是范围，1asdf’是我们自己弄的，不看，最后右边剩了’limt所以是单引号，不看左边</p><h3 id="3-判断列数"><a href="#3-判断列数" class="headerlink" title="3.判断列数"></a>3.判断列数</h3><p>​               order by  列数   用来判断列数</p><p>​                联合查询union select 把前面id改为负的</p><p>​            <strong>取数据</strong>  </p><p>​                  <strong>数据库名</strong></p><p>​                   union  select  1,database(),3   –+</p><p>​                 <strong>查表名</strong></p><p>​                 union  select  1,(select  table_name  from  information_schema.tables   where  table_schema&#x3D;’数据库名’),3   –+ 这样输出会超过一行</p><p>  union  select  1,(select  group_concat(table_name)  from  information_schema.tables   where  table_schema&#x3D;’数据库名’),3   –+ 这样输出就一行</p><p>​                <strong>查列名</strong></p><p>  union  select  1,(select  group_concat(column_name)  from  information_schema.column  where  table_schema&#x3D;’数据库名’  and  table_name&#x3D;’表名’),3   –+ 这样输出就一行</p><p>​                 <strong>具体数据</strong></p><p>​               union   select  1,(select group_concat(password))from users) ,3  –+</p><p>​                 </p><h1 id="使用联合注入"><a href="#使用联合注入" class="headerlink" title="使用联合注入"></a>使用联合注入</h1><p>步骤：1.先查多少字段；2.查回显位；3.查数据库；4.查表名；5.查字段名；6.查所有数据</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.16</title>
    <link href="/blog/2025/01/16/1-16/"/>
    <url>/blog/2025/01/16/1-16/</url>
    
    <content type="html"><![CDATA[<h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><h2 id="识别算法编码类型："><a href="#识别算法编码类型：" class="headerlink" title="识别算法编码类型："></a>识别算法编码类型：</h2><p>1.看位数</p><p>2.看密文的特征（数字，字幕，大小写，符号等）</p><p>3.看当前的密文存在的地方（web，数据库，操作系统等应用）</p><p>#详细点：<br>密码存储加密：<br>MD5 SHA1 NTLM AES DES RC4</p><h1 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h1><p>是 32 或 16 位位由数字”0-9”和字母”a-f”所组成的字符串</p><p>不可逆</p><p>解密：枚举，碰撞 </p><p>不直接通过算法解密，枚举</p><p>尝试生成很多的加密或者明文的字符去枚举</p><h1 id="SHA1"><a href="#SHA1" class="headerlink" title="SHA1"></a>SHA1</h1><p> 这种加密的密文特征跟 MD5 差不多，只不过位数是 40</p><h1 id="NTLM"><a href="#NTLM" class="headerlink" title="NTLM"></a>NTLM</h1><p>这种加密是 Windows 的哈希密码，标准通讯安全协议</p><h1 id="AES-DES-RC4"><a href="#AES-DES-RC4" class="headerlink" title="AES,DES,RC4"></a>AES,DES,RC4</h1><p> 这些都是非对称性加密算法，引入密钥，密文特征与 Base64 类似<br>应用场景：各类应用密文，自定义算法，代码分析，CTF 安全比赛等</p><h1 id="传输数据编码："><a href="#传输数据编码：" class="headerlink" title="传输数据编码："></a>传输数据编码：</h1><h1 id="BASE64-URL-HEX-ASCII"><a href="#BASE64-URL-HEX-ASCII" class="headerlink" title="BASE64 URL HEX ASCII"></a>BASE64 URL HEX ASCII</h1><h2 id="BASE64"><a href="#BASE64" class="headerlink" title="BASE64"></a>BASE64</h2><p>值是由数字”0-9”和字母”a-f”所组成的字符串,大小写敏感,结尾通常有符号&#x3D;</p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p> 编码是由数字”0-9”和字母”a-f”所组成的字符串,大小写敏感,通常以%数字字母间隔</p><h2 id="HEX"><a href="#HEX" class="headerlink" title="HEX"></a>HEX</h2><p> 编码是计算机中数据的一种表示方法,将数据进行十六进制转换,它由 0-9,A-F,组成</p><h2 id="ASCII-编码"><a href="#ASCII-编码" class="headerlink" title="ASCII 编码"></a>ASCII 编码</h2><p>是将 128 个字符进行进制数来表示,常见 ASCII 码表大小规则：0<del>9&lt;A</del>Z&lt;a~z</p><p>举例：<br>个人博客-URL 解码<br>国外 WEB-BASE64 解码<br>搜狐视频-BASE64 解码<br>应用场景：参数传递(如注入影响)，后期 WAF 绕过干扰写法应用，视频地址还原等</p><h1 id="JS-前端代码加密："><a href="#JS-前端代码加密：" class="headerlink" title="JS 前端代码加密："></a>JS 前端代码加密：</h1><p>JS 颜文字 jother JSFUCK</p><h2 id="颜文字特征："><a href="#颜文字特征：" class="headerlink" title="颜文字特征："></a>颜文字特征：</h2><p>一堆颜文字构成的 js 代码，在 F12 中可直接解密执行</p><h1 id="jother-特征："><a href="#jother-特征：" class="headerlink" title="jother 特征："></a>jother 特征：</h1><p>只用! + ( ) [ ] { }这八个字符就能完成对任意字符串的编码。也可在 F12 中解密执行</p><h1 id="JSFUCK-特征："><a href="#JSFUCK-特征：" class="headerlink" title="JSFUCK 特征："></a>JSFUCK 特征：</h1><p>与 jother 很像，只是少了{ }</p><h1 id="后端代码加密："><a href="#后端代码加密：" class="headerlink" title="后端代码加密："></a>后端代码加密：</h1><p>PHP .NET JAVA</p><h1 id="PHP："><a href="#PHP：" class="headerlink" title="PHP："></a>PHP：</h1><p>乱码，头部有信息</p><h1 id="NET："><a href="#NET：" class="headerlink" title=".NET："></a>.NET：</h1><p>DLL 封装代码文件</p><h1 id="JAVA："><a href="#JAVA：" class="headerlink" title="JAVA："></a>JAVA：</h1><p>JAR&amp;CLASS 文件<br>举例：Zend ILSpy IDEA<br>应用场景：版权代码加密，开发特性，CTF 比赛等<br>数据库密文加密：<br>MYSQL MSSQL 等<br>数据显示编码：<br>UTF-8 GBK2312 等</p><h1 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h1><p>是获取操作系统WINDOWS操作系统上面的一个铭文密码</p><p>资源：<br><a href="https://www.cmd5.com/">https://www.cmd5.com</a><br><a href="http://tmxk.org/jother">http://tmxk.org/jother</a><br><a href="http://www.jsfuck.com/">http://www.jsfuck.com</a><br><a href="http://www.hiencode.com/">http://www.hiencode.com</a><br><a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a><br><a href="https://utf-8.jp/public/aaencode.html">https://utf-8.jp/public/aaencode.html</a><br>1.30 余种加密编码类型的密文特征分析（建议收藏）<br><a href="https://mp.weixin.qq.com/s?__biz=MzAwNDcxMjI2MA==&mid=2247484455&idx=1&sn=e1b4324ddcf7d6">https://mp.weixin.qq.com/s?__biz=MzAwNDcxMjI2MA==&amp;mid=2247484455&amp;idx=1&amp;sn=e1b4324ddcf7d6</a><br>123be30d9a5613e17b&amp;chksm&#x3D;9b26f60cac517f1a920cf3b73b3212a645aeef78882c47957b9f3c2135cb7ce<br>051c73fe77bb2&amp;mpshare&#x3D;1&amp;scene&#x3D;23&amp;srcid&#x3D;1111auAYWmr1N0NAs9Wp2hGz&amp;sharer_sharetime&#x3D;1605<br>145141579&amp;sharer_shareid&#x3D;5051b3eddbbe2cb698aedf9452370026#rd<br>2.CTF 中常见密码题解密网站总结（建议收藏）<br><a href="https://blog.csdn.net/qq_41638851/article/details/100526839">https://blog.csdn.net/qq_41638851/article/details/100526839</a><br>3.CTF 密码学常见加密解密总结（建议收藏）<br><a href="https://blog.csdn.net/qq_40837276/article/details/83080460">https://blog.csdn.net/qq_40837276/article/details/83080460</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.16</title>
    <link href="/blog/2025/01/16/1-16%E9%A2%98/"/>
    <url>/blog/2025/01/16/1-16%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p><img src="/blog/image/image-20250116164006533.png" alt="image-20250116164006533"></p><p>直接抓包</p><p><img src="/blog/image/image-20250116164614996.png" alt="image-20250116164614996"></p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p><img src="/blog/image/image-20250116165440451.png" alt="image-20250116165440451"></p><p>说这个phps可以帮忙这个</p><p><img src="/blog/image/image-20250116165806646.png" alt="image-20250116165806646"></p><p>下载里面有</p><p>ctfshow{bc20b524-f685-41ed-a16d-d5864e25c2e5}</p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p><img src="/blog/image/image-20250116170225661.png" alt="image-20250116170225661"></p><p>抓包</p><p><img src="/blog/image/image-20250116170254751.png" alt="image-20250116170254751"></p><p>有道类似的题，还要解压缩，试试，<a href="http://www.zip/">www.zip</a></p><p><img src="/blog/image/image-20250116170343867.png" alt="image-20250116170343867"></p><p><img src="/blog/image/image-20250116170512319.png" alt="image-20250116170512319"></p><p>在链接后面加上fl000g.txt尝试一下</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">ctfshow&#123;<span class="hljs-number">0a591be4</span>-a187-<span class="hljs-number">4b97</span>-9aad-e93e0ba038da&#125;<br></code></pre></td></tr></table></figure><h1 id="四"><a href="#四" class="headerlink" title="四"></a>四</h1><p><img src="/blog/image/image-20250116171840936.png" alt="image-20250116171840936"></p><p><img src="/blog/image/image-20250116171733315.png" alt="image-20250116171733315"></p><p>可能是git或者是svn</p><p>查看一下</p><p>得到</p><p>ctfshow{9d5cbb85-0fba-4012-b8b5-8b82d4255640}</p><h1 id="五"><a href="#五" class="headerlink" title="五"></a>五</h1><p>今天学习了dirsearch</p><p>dirsearch -u 加上链接 -e 加上要查找的后缀</p><p><img src="/blog/image/image-20250116172106656.png" alt="image-20250116172106656"></p><p>打开这个链接，得到</p><p>ctfshow{9d5cbb85-0fba-4012-b8b5-8b82d4255640}</p><h1 id="六"><a href="#六" class="headerlink" title="六"></a>六</h1><p><img src="/blog/image/image-20250116175017320.png" alt="image-20250116175017320"></p><p>昨天学习了，robots</p><p>在后面加上&#x2F;robots.txt</p><p><img src="/blog/image/image-20250116175105846.png" alt="image-20250116175105846"></p><p>打开&#x2F;f10g.php</p><p>得到wWwrobots</p><h1 id="七"><a href="#七" class="headerlink" title="七"></a>七</h1><p><img src="/blog/image/image-20250116180117991.png" alt="image-20250116180117991"></p><p><img src="/blog/image/image-20250116180134598.png" alt="image-20250116180134598"></p><p>右键没有用，抓包试试</p><p><img src="/blog/image/image-20250116180325352.png" alt="image-20250116180325352"></p><p>抓包得到</p><h1 id="八"><a href="#八" class="headerlink" title="八"></a>八</h1><p><img src="/blog/image/image-20250116180432968.png" alt="image-20250116180432968"></p><p><img src="/blog/image/image-20250116180518743.png" alt="image-20250116180518743"></p><p>备份文件后缀</p><p>.git   .svn  .swp   .bak</p><p>试出来是.bak</p><p>Cyberpeace{855A1C4B3401294CB6604CCC98BDE334}得到</p><h1 id="九"><a href="#九" class="headerlink" title="九"></a>九</h1><p>题目是cookie</p><p>之前类似的题目</p><p>抓包</p><p><img src="/blog/image/image-20250116182317468.png" alt="image-20250116182317468"></p><p><img src="/blog/image/image-20250116182411826.png" alt="image-20250116182411826"></p><p>再抓包，得到</p><p><img src="C:/Users/1/AppData/Roaming/Typora/typora-user-images/image-20250116182523356.png" alt="image-20250116182523356"></p><h1 id="十"><a href="#十" class="headerlink" title="十"></a>十</h1><p><img src="/blog/image/image-20250116182940150.png" alt="image-20250116182940150"></p><p>要么是git要么是svn</p><p>尝试一下</p><p>是.svn</p><p>得到</p><p>ctfshow{268cf3c3-7569-42b4-8fe1-5ffe296fd3e8}</p><h1 id="十一"><a href="#十一" class="headerlink" title="十一"></a>十一</h1><p><img src="/blog/image/image-20250116183701915.png" alt="image-20250116183701915"></p><p>全是颜文字，是js，按F12＋fn可以解密</p><p>flag{3e858ccd79287cfe8509f15a71b4c45d}、</p><h1 id="十二"><a href="#十二" class="headerlink" title="十二"></a>十二</h1><p><img src="/blog/image/image-20250116184219945.png" alt="image-20250116184219945"></p><p>凯撒密码（caesar)</p><p><img src="/blog/image/image-20250116184341276.png" alt="image-20250116184341276"></p><p>用之前写的脚本试一下，</p><p><img src="/blog/image/image-20250116185218081.png" alt="image-20250116185218081"></p><h1 id="十三"><a href="#十三" class="headerlink" title="十三"></a>十三</h1><p><img src="/blog/image/image-20250116185342556.png" alt="image-20250116185342556"></p><p>morse，读者就像莫斯密码</p><p>11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10 110</p><p>妙！百度一下解题思路</p><p><img src="/blog/image/image-20250116190038009.png" alt="image-20250116190038009"></p><h1 id="十四"><a href="#十四" class="headerlink" title="十四"></a>十四</h1><p><img src="/blog/image/image-20250116190500295.png" alt="image-20250116190500295"></p><p>打开图片就是答案好啊</p><h1 id="十五"><a href="#十五" class="headerlink" title="十五"></a>十五</h1><p><img src="/blog/image/image-20250116191013070.png" alt="image-20250116191013070"></p><p>放到winhex中查看</p><p><img src="/blog/image/image-20250116191135087.png" alt="image-20250116191135087"></p><p>png</p><p>改后缀</p><p><img src="/blog/image/image-20250116191250011.png" alt="image-20250116191250011"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.15</title>
    <link href="/blog/2025/01/16/1-15/"/>
    <url>/blog/2025/01/16/1-15/</url>
    
    <content type="html"><![CDATA[<p>封包监听工具</p><h1 id="非web协议"><a href="#非web协议" class="headerlink" title="非web协议"></a>非web协议</h1><p>抓不到，用wireshark或者科来网络分析系统（新手）</p><h1 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h1><p>网络</p><p><img src="/blog/image/image-20250116124039382.png" alt="image-20250116124039382"></p><p>设置好代理，才能抓包好</p><p>抓包游戏</p><p>用科来抓包</p><h1 id="1-1抓包技术应用意义"><a href="#1-1抓包技术应用意义" class="headerlink" title="1.1抓包技术应用意义"></a>1.1抓包技术应用意义</h1><p>有些应用是看不到的</p><h1 id="1-2抓包技术应用对象"><a href="#1-2抓包技术应用对象" class="headerlink" title="1.2抓包技术应用对象"></a>1.2抓包技术应用对象</h1><p>手机app、微信小程序、PC应用</p><h1 id="1-3抓包技术应用协议"><a href="#1-3抓包技术应用协议" class="headerlink" title="1.3抓包技术应用协议"></a>1.3抓包技术应用协议</h1><h1 id="1-4抓包技术应用支持"><a href="#1-4抓包技术应用支持" class="headerlink" title="1.4抓包技术应用支持"></a>1.4抓包技术应用支持</h1><p>Windows、Linux</p><h1 id="2-1-1抓包封包工具"><a href="#2-1-1抓包封包工具" class="headerlink" title="2.1.1抓包封包工具"></a>2.1.1抓包封包工具</h1><h2 id="Fiddler："><a href="#Fiddler：" class="headerlink" title="Fiddler："></a>Fiddler：</h2><p>是一个 http 协议调试代理工具，它能够记录并检查所有你的电脑和互联网之间的 http 通讯，设置断点，查看所有的“进出”Fiddler 的数据（指 cookie,html,js,css 等文件）。 Fiddler 要比其他的网络调试器要更加简单，因为它不仅仅暴露 http 通讯还提供了一个用户友好的格式。</p><h2 id="Charles（茶杯）："><a href="#Charles（茶杯）：" class="headerlink" title="Charles（茶杯）："></a>Charles（茶杯）：</h2><p>是一个 HTTP 代理服务器,HTTP 监视器,反转代理服务器，当浏览器连接 Charles 的代理访问互联网时，Charles 可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的 HTTP 通信，这些包括 request, response 和 HTTP headers （包含 cookies 与 caching 信息）。</p><h2 id="TCPDump："><a href="#TCPDump：" class="headerlink" title="TCPDump："></a>TCPDump：</h2><p>是可以将网络中传送的数据包完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，并提供 and、or、not 等逻辑语句来帮助你去掉无用的信息。</p><h2 id="BurpSuite："><a href="#BurpSuite：" class="headerlink" title="BurpSuite："></a>BurpSuite：</h2><p>是用于攻击 web 应用程序的集成平台，包含了许多工具。Burp Suite 为这些工具设计了许多接口，以加快攻击应用程序的过程。所有工具都共享一个请求，并能处理对应的 HTTP 消息、持久性、认证、代理、日志、警报。</p><h2 id="Wireshark："><a href="#Wireshark：" class="headerlink" title="Wireshark："></a>Wireshark：</h2><p>是一个网络封包分析软件。网络封包分析软件的功能是截取网络封包，并尽可能显示出最为详细的网络封包资料。Wireshark 使用 WinPCAP 作为接口，直接与网卡进行数据报文交换。</p><h2 id="科来网络分析系统："><a href="#科来网络分析系统：" class="headerlink" title="科来网络分析系统："></a>科来网络分析系统：</h2><p>是一款由科来软件全自主研发，并拥有全部知识产品的网络分析产品。该系统具有行业领先的专家分析技术，通过捕获并分析网络中传输的底层数据包，对网络故障、网络安全</p><p>以及网络性能进行全面分析，从而快速排查网络中出现或潜在的故障、安全及性能问题。</p><h2 id="WPE-封包分析："><a href="#WPE-封包分析：" class="headerlink" title="WPE&amp;封包分析："></a>WPE&amp;封包分析：</h2><p>是强大的网络封包编辑器，wpe 可以截取网络上的信息，修改封包数据，是外挂制作的常用工具。一般在安全测试中可用来调试数据通讯地址</p><p>通过浏览器功能：浏览器右键“检查”</p><p>2.2APP&amp;小程序&amp;PC 抓包 HTTP&#x2F;S 数据-Charles&amp;Fiddler&amp;Burpsuite<br>app不走web协议，用科来和封包工具</p><p>Charles（茶杯）</p><p>安装证书<br>设置HTTP代理—&gt;运行工具的本机IP端口</p><p>BurpSuite:</p><p>点对点可以抓实时的，可以做安全测试</p><p>burpsuite 茶杯 fiddler 需要配置代理监听抓取</p><p>wireshark 科来 不需要配置任何东西</p><p>2.3程序进程&amp;网络接口&amp;其他协议抓包-WireShark&amp;科来网络分析系统<br>Wireshark：</p><p>选以太网，用筛选器</p><p>2.4通讯类应用封包分析发送接收-WPE 四件套封包&amp;科来网络分析系统</p><p><img src="/blog/image/image-20250116125213221.png" alt="image-20250116125213221"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.15题</title>
    <link href="/blog/2025/01/16/1-15%E9%A2%98/"/>
    <url>/blog/2025/01/16/1-15%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p><img src="/blog/image/image-20250115154928630.png" alt="image-20250115154928630"></p><p><img src="/blog/image/image-20250115155106171.png" alt="image-20250115155106171"></p><p>备份文件，直接在链接里输入</p><p>打开下载的文件，用记事本打开</p><p><img src="/blog/image/image-20250115155216800.png" alt="image-20250115155216800"></p><p>be0c4c2ebbd3e4ba8fe54593210346d0.txt</p><p>感觉这一串和给的链接长得好像，或许也是个文件，尝试一下</p><p><img src="/blog/image/image-20250115155517791.png" alt="image-20250115155517791"></p><p>还真是</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p><img src="/blog/image/image-20250115155947683.png" alt="image-20250115155947683"></p><p>什么bugscanteam的githack</p><p><img src="/blog/image/image-20250115170955487.png" alt="image-20250115170955487"></p><p>yes,新的尝试</p><p><img src="/blog/image/image-20250115181819853.png" alt="image-20250115181819853"></p><p>用python2</p><p>clone成功了，打开看看</p><p><img src="/blog/image/image-20250115181910830.png" alt="image-20250115181910830"></p><p><img src="/blog/image/image-20250115182121274.png" alt="image-20250115182121274"></p><p><img src="/blog/image/image-20250115182603725.png" alt="image-20250115182603725">用git reset –hard 来看</p><p>打开目录</p><p><img src="/blog/image/image-20250115183021347.png" alt="image-20250115183021347"></p><p>ctfhub{e50c10ceb7a462819b5bda12}</p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p>从网上学习的  git stash pop，</p><p><img src="/blog/image/image-20250115183517890.png" alt="image-20250115183517890"></p><p>和上面同样的方法</p><p><img src="/blog/image/image-20250115183558001.png" alt="image-20250115183558001"></p><p>发现里面有个被删除的文件</p><p>more 开看看</p><p><img src="/blog/image/image-20250115183653219.png" alt="image-20250115183653219"></p><p><img src="/blog/image/image-20250115183732917.png" alt="image-20250115183732917"></p><h1 id="四"><a href="#四" class="headerlink" title="四"></a>四</h1><p>仁慈的一道题</p><p>用着同样的方法，直接打开</p><p>python2 GitHack.py <a href="http://challenge-a0e4ce7a885f3ba9.sandbox.ctfhub.com:10800/.git">http://challenge-a0e4ce7a885f3ba9.sandbox.ctfhub.com:10800/.git</a></p><p><img src="/blog/image/image-20250115184059084.png" alt="image-20250115184059084"></p><p>ctfhub{98e5cbc8ebf8cf3a9498d7b1}（图片打开错了）</p><p><img src="/blog/image/image-20250115184322787.png" alt="image-20250115184322787"></p><h2 id="开源的版本控制系统"><a href="#开源的版本控制系统" class="headerlink" title="开源的版本控制系统"></a>开源的版本控制系统</h2><p>‌**<a href="https://www.baidu.com/s?ch=11&tn=98010089_dg&wd=SVN&usm=3&ie=utf-8&rsv_pq=f4bb184c001db46d&oq=SVN%E6%98%AF%E4%BB%80%E4%B9%88&rsv_t=2ab90XFETOQeGhJdgVzOepRb7ajTB3BITdf6yrYZ4MVdyZvEvDchr9Vudm6hPZ9g+OQ&rsv_dl=re_dqa_generate&sa=re_dqa_generate">SVN</a>（Subversion）是一个开源的版本控制系统**‌，主要用于多人共同开发同一个项目，实现资源的共享和管理。它通过分支管理系统的使用，简化了版本管理，提高了开发效率。‌</p><h3 id="SVN的基本概念和功能"><a href="#SVN的基本概念和功能" class="headerlink" title="SVN的基本概念和功能"></a>SVN的基本概念和功能</h3><p>SVN（Subversion）是一个开放源代码的版本控制系统，主要用于软件开发过程中的文件变更管理。它能够记录每个版本的信息，方便问题追踪，并且支持并行开发，提高了开发效率。SVN采用分支管理系统，相较于<a href="https://www.baidu.com/s?ch=11&tn=98010089_dg&wd=RCS&usm=3&ie=utf-8&rsv_pq=f4bb184c001db46d&oq=SVN%E6%98%AF%E4%BB%80%E4%B9%88&rsv_t=5139Dnyr9jzngHlAWqqdrWvc5+UWzPf/eMG6eB8MUk7Mwzyt3XGEd45KXqkdyuMzSX0&rsv_dl=re_dqa_generate&sa=re_dqa_generate">RCS</a>和<a href="https://www.baidu.com/s?ch=11&tn=98010089_dg&wd=CVS&usm=3&ie=utf-8&rsv_pq=f4bb184c001db46d&oq=SVN%E6%98%AF%E4%BB%80%E4%B9%88&rsv_t=4afa90+YHB9eWfNmy7r19vlcgCA5sHVVBjc7DGmtLZI9hCeJP1S+vd1gYnNQBX5JRjE&rsv_dl=re_dqa_generate&sa=re_dqa_generate">CVS</a>，它设计目标是取代CVS，提供更高效的管理方式。</p><h3 id="SVN的主要操作"><a href="#SVN的主要操作" class="headerlink" title="SVN的主要操作"></a>SVN的主要操作</h3><p>SVN的主要操作包括：</p><ul><li>‌**检出（Checkout）**‌：从服务器获取项目副本。</li><li>‌**添加（Add）**‌：将新文件或目录加入版本控制。</li><li>‌**删除（Delete）**‌：从版本控制中移除文件或目录。</li><li>‌**提交（Commit）**‌：将本地更改上传到服务器。</li><li>‌**更新（Update）**‌：从服务器获取最新的项目版本。</li><li>‌**合并（Merge）**‌：合并不同分支的更改。</li><li>‌**日志（Log）**‌：查看项目的历史记录。</li><li>‌**状态（Status）**‌：查看当前项目的状态。</li><li>‌**帮助（Help）**‌：获取SVN命令的帮助信息。</li></ul><h3 id="SVN的优缺点"><a href="#SVN的优缺点" class="headerlink" title="SVN的优缺点"></a>SVN的优缺点</h3><p>‌<strong>优点</strong>‌：</p><ul><li>‌<strong>操作简单</strong>‌：容易上手，适合新手使用。</li><li>‌<strong>跨平台</strong>‌：支持Windows、Linux、MacOS等多个操作系统。</li><li>‌<strong>支持版本回退</strong>‌：可以方便地回退到之前的版本。</li><li>‌<strong>高效管理</strong>‌：通过分支管理系统提高开发效率。</li></ul><p>‌<strong>缺点</strong>‌：</p><ul><li>‌<strong>性能问题</strong>‌：在大项目中，SVN的性能可能不如<a href="https://www.baidu.com/s?ch=11&tn=98010089_dg&wd=Git&usm=3&ie=utf-8&rsv_pq=f4bb184c001db46d&oq=SVN%E6%98%AF%E4%BB%80%E4%B9%88&rsv_t=ad74E5pBjgTz3Il31BytS1OaaQp04/M7iA0PYBOGsnCUVbc9Sz2L0jvU/fMmjeQ8QZA&rsv_dl=re_dqa_generate&sa=re_dqa_generate">Git</a>，尤其是在处理大量文件和复杂项目时。</li><li>‌<strong>存储方式</strong>‌：SVN的存储方式可能不如Git灵活，尤其是在分布式环境中。</li></ul><p>已经将dvcs-ripper弄到虚拟机了</p><p><img src="/blog/image/image-20250115185522424.png" alt="image-20250115185522424"></p><p>用&#x2F;rip-svn.pl -v -u来做</p><h1 id="五"><a href="#五" class="headerlink" title="五"></a>五</h1><p>转战这个ctfshow了，后面的实在不会了</p><p><img src="/blog/image/image-20250115193849810.png" alt="image-20250115193849810"></p><p>直接抓包</p><p><img src="/blog/image/image-20250115193944220.png" alt="image-20250115193944220"></p><p>Y3Rmc2hvd3tjYzhjM2E1ZS1lOGNlLTRlN2YtODczNC0zZmY3ZjI2MjQ3NGZ9</p><p>解码</p><p>ctfshow{cc8c3a5e-e8ce-4e7f-8734-3ff7f262474f}</p><h1 id="六"><a href="#六" class="headerlink" title="六"></a>六</h1><p><img src="/blog/image/image-20250115194258894.png" alt="image-20250115194258894"></p><p>和昨天的一道题类似</p><p><img src="/blog/image/image-20250115194857853.png" alt="image-20250115194857853"></p><p><img src="/blog/image/image-20250115195416966.png" alt="image-20250115195416966"></p><p><img src="/blog/image/image-20250115195518713.png" alt="image-20250115195518713"></p><p>找到200了</p><p>解码</p><p><img src="/blog/image/image-20250115195640361.png" alt="image-20250115195640361"></p><p>ctfshow{6e6d14d4-2f4c-4a3b-8bd8-06fcc79f619e}</p><h1 id="七"><a href="#七" class="headerlink" title="七"></a>七</h1><p><img src="/blog/image/image-20250115203730024.png" alt="image-20250115203730024"></p><p>直接抓包</p><p><img src="/blog/image/image-20250115203758157.png" alt="image-20250115203758157"></p><h1 id="八"><a href="#八" class="headerlink" title="八"></a>八</h1><p><img src="/blog/image/image-20250115204042703.png" alt="image-20250115204042703"></p><p><img src="/blog/image/image-20250115204128139.png" alt="image-20250115204128139"></p><p>直接抓包</p><h1 id="九"><a href="#九" class="headerlink" title="九"></a>九</h1><p><img src="/blog/image/image-20250115205427247.png" alt="image-20250115205427247"></p><p>直接抓包</p><p><img src="/blog/image/image-20250115205445523.png" alt="image-20250115205445523"></p><h1 id="十"><a href="#十" class="headerlink" title="十"></a>十</h1><p><img src="/blog/image/image-20250115210144055.png" alt="image-20250115210144055"></p><p>Robots协议，全称为 <strong>网络爬虫排除标准</strong> （Robots Exclusion Protocol，简称REP），是一种 <strong>存放于网站根目录下的ASCII编码文本文件</strong> <strong>5</strong>。该文件通过特定的语法和规则，告诉网络搜索引擎的漫游器（网络蜘蛛）哪些页面可以抓取，哪些页面不能抓取<strong>6</strong>。</p><p>具体来说，Robots协议的作用包括<strong>4</strong>：</p><ol><li><strong>保护网站隐私</strong> ：防止网站的重要信息被泄露，增强网站安全性<strong>2</strong>。</li><li><strong>节省服务器带宽</strong> ：通过屏蔽一些大文件（如图片、音乐、视频等），减少搜索引擎抓取时的数据传输量，从而节省服务器带宽。</li><li><strong>提高抓取效率</strong> ：指定搜索引擎只抓取特定的内容，避免抓取不必要的页面，提高抓取效率。</li><li><strong>遵守国际道德规范</strong> ：Robots协议基于网络搜索技术应服务于人类，尊重信息提供者的意愿，并维护其隐私权的原则<strong>4</strong>。</li></ol><p>Robots协议以“User-agent”开始，用于指定爬虫的身份<strong>1</strong>。例如，“User-agent: Baiduspider”表示百度的爬虫，“User-agent: <em>”表示未指定身份的所有爬虫*<em>1</em></em>。</p><p>需要注意的是，虽然Robots协议是一种约定俗成的标准，但并不能保证100%的隐私保护，因为有些爬虫可能会忽略或不遵守该协议。</p><p>创建和编辑Robots协议非常简单，可以使用任何常见的文本编辑器（如Windows系统自带的Notepad）进行操作<strong>3</strong>。文件名应统一为小写，并放置在网站的根目录下<strong>6</strong>。</p><p><img src="/blog/image/image-20250115210404583.png" alt="image-20250115210404583">这个是个文件</p><p><img src="/blog/image/image-20250115210621323.png" alt="image-20250115210621323"></p><h1 id="十一"><a href="#十一" class="headerlink" title="十一"></a>十一</h1><p><img src="/blog/image/image-20250115211013056.png" alt="image-20250115211013056"></p><p>看着是倒叙，试试</p><p><img src="/blog/image/image-20250115211103827.png" alt="image-20250115211103827"></p><h1 id="十二"><a href="#十二" class="headerlink" title="十二"></a>十二</h1><p><img src="/blog/image/image-20250115211703266.png" alt="image-20250115211703266"></p><p>base64解码</p><p><img src="/blog/image/image-20250115211737920.png" alt="image-20250115211737920"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.14</title>
    <link href="/blog/2025/01/16/1-14/"/>
    <url>/blog/2025/01/16/1-14/</url>
    
    <content type="html"><![CDATA[<p><strong>主域名</strong>（Second-level domain）是域名的倒数第二个部分，例如在域名<em>example.baidu.com</em>中，<em>baidu.com</em>就是主域名。主域名通常由两个或两个以上的字母构成，中间由点号隔开，整个域名通常只有1个点号。例如，百度的主域名是<em>baidu.com</em>。</p><p><strong>子域名</strong>（Subdomain）则是在主域名前面加上不同的前缀构成的，通常比主域名多一个点或两个点。子域名可以根据站点不同性质在主域名前面加上不同的前缀构成，如<em><a href="http://www.baidu.com/">www.baidu.com</a></em>和<em>map.baidu.com</em>。子域名可以继续划分为子域的子域，形成多级子域名结构。例如，<em><a href="http://www.example.aliyun.com/">www.example.aliyun.com</a></em>是<em>exampl**e.aliyun.com</em>的子域名，而<em>example.aliyun.com</em>又是<em>aliyun.com</em>的子域名。</p><h1 id="程序源码"><a href="#程序源码" class="headerlink" title="程序源码"></a>程序源码</h1><h1 id="开发语言"><a href="#开发语言" class="headerlink" title="开发语言"></a>开发语言</h1><p>asp,php,aspx,jsp,java,python,ruby,html,javascript等</p><h1 id="中间件容器"><a href="#中间件容器" class="headerlink" title="中间件容器"></a>中间件容器</h1><p>支撑网站运行的东西</p><p><img src="/blog/image/image-20250114200520904.png" alt="image-20250114200520904"></p><p>针对不同源码，有更好的选择</p><h1 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h1><p>用来存储网站数据</p><p><img src="/blog/image/image-20250114200712880.png" alt="image-20250114200712880"></p><h1 id="第三方软件"><a href="#第三方软件" class="headerlink" title="第三方软件"></a>第三方软件</h1><h1 id="CMS"><a href="#CMS" class="headerlink" title="CMS"></a>CMS</h1><p>程序的名字</p><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><p><strong>SQL注入</strong>是一种常见的网络攻击技术，它不是通过利用操作系统的漏洞，而是针对程序员在编程时的疏忽，通过构造特殊的SQL语句来实现非法访问或操作数据库。攻击者可以通过SQL注入获取无权限的数据，甚至修改和删除数据库中的重要信息。</p><h1 id="文件安全"><a href="#文件安全" class="headerlink" title="文件安全"></a>文件安全</h1><p>代码写的关于文件写的产生的漏洞</p><p><img src="/blog/image/image-20250114201642030.png" alt="image-20250114201642030"></p><p>问题在源码里</p><p><img src="/blog/image/image-20250114203448949.png" alt="image-20250114203448949"></p><p>设置这个地址，抓包</p><h1 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h1><p>文件 200是OK的 404不存在</p><p>文件夹 403存在 404不在</p><p>3xx跳转 处置过程   判断可有可无</p><p>5xx内部错误  服务器问题  判断可有可无</p><h1 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h1><p>Accept：指定客户端能够接收的内容类型。</p><p>Accept-Charset：浏览器可以接受的字符编码集。</p><p>Accept-Encoding：指定浏览器可以支持的web服务器返回内容压缩编码类型。</p><p>Accept-Language：浏览器可接受的语言。</p><p>Accept-Ranges：可以请求网页实体的一个或者多个子范围字段。</p><p>AuthorizationHTTP：授权的授权证书。</p><p>Cache-Control：指定请求和响应遵循的缓存机制。</p><p>Connection：表示是否需要持久连接。（HTTP 1.1默认进行持久连接）</p><p>CookieHTTP：请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器。</p><p>Content-Length：请求的内容长度。</p><p>Content-Type：请求的与实体对应的MIME信息。</p><p>Date：请求发送的日期和时间。</p><p>Expect：请求的特定的服务器行为。</p><p>From：发出请求的用户的Email。</p><p>Host：指定请求的服务器的域名和端口号。</p><p>If-Match：只有请求内容与实体相匹配才有效。</p><p>If-Modified-Since：如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回304代码。</p><p>If-None-Match：如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变。</p><p>If-Range：如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。</p><p>If-Unmodified-Since：只在实体在指定时间之后未被修改才请求成功。</p><p>Max-Forwards：限制信息通过代理和网关传送的时间。</p><p>Pragma：用来包含实现特定的指令。</p><p>Proxy-Authorization：连接到代理的授权证书。</p><p>Range：只请求实体的一部分，指定范围。</p><p>Referer：先前网页的地址，当前请求网页紧随其后,即来路。</p><p>TE：客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息。</p><p>Upgrade：向服务器指定某种传输协议以便服务器进行转换（如果支持。</p><p>User-AgentUser-Agent：的内容包含发出请求的用户信息。</p><p>Via：通知中间网关或代理服务器地址，通信协议。</p><p>Warning：关于消息实体的警告信息</p><h2 id="HTTP-状态码分类"><a href="#HTTP-状态码分类" class="headerlink" title="HTTP 状态码分类"></a>HTTP 状态码分类</h2><p>HTTP 状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型。响应分为五类：信息响应(100–199)，成功响应(200–299)，重定向(300–399)，客户端错误(400–499)和服务器错误 (500–599)：</p><table><thead><tr><th align="left">分类</th><th align="left">分类描述</th></tr></thead><tbody><tr><td align="left">1**</td><td align="left">信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td align="left">2**</td><td align="left">成功，操作被成功接收并处理</td></tr><tr><td align="left">3**</td><td align="left">重定向，需要进一步的操作以完成请求</td></tr><tr><td align="left">4**</td><td align="left">客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td align="left">5**</td><td align="left">服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table><h2 id="HTTP状态码列表"><a href="#HTTP状态码列表" class="headerlink" title="HTTP状态码列表:"></a>HTTP状态码列表:</h2><table><thead><tr><th align="left">状态码</th><th align="left">状态码英文名称</th><th align="left">中文描述</th></tr></thead><tbody><tr><td align="left">100</td><td align="left">Continue</td><td align="left">继续。客户端应继续其请求</td></tr><tr><td align="left">101</td><td align="left">Switching Protocols</td><td align="left">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">200</td><td align="left">OK</td><td align="left">请求成功。一般用于GET与POST请求</td></tr><tr><td align="left">201</td><td align="left">Created</td><td align="left">已创建。成功请求并创建了新的资源</td></tr><tr><td align="left">202</td><td align="left">Accepted</td><td align="left">已接受。已经接受请求，但未处理完成</td></tr><tr><td align="left">203</td><td align="left">Non-Authoritative Information</td><td align="left">非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td align="left">204</td><td align="left">No Content</td><td align="left">无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td align="left">205</td><td align="left">Reset Content</td><td align="left">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td align="left">206</td><td align="left">Partial Content</td><td align="left">部分内容。服务器成功处理了部分GET请求</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">300</td><td align="left">Multiple Choices</td><td align="left">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td align="left">301</td><td align="left">Moved Permanently</td><td align="left">永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td align="left">302</td><td align="left">Found</td><td align="left">临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td align="left">303</td><td align="left">See Other</td><td align="left">查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td align="left">304</td><td align="left">Not Modified</td><td align="left">未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td align="left">305</td><td align="left">Use Proxy</td><td align="left">使用代理。所请求的资源必须通过代理访问</td></tr><tr><td align="left">306</td><td align="left">Unused</td><td align="left">已经被废弃的HTTP状态码</td></tr><tr><td align="left">307</td><td align="left">Temporary Redirect</td><td align="left">临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">400</td><td align="left">Bad Request</td><td align="left">客户端请求的语法错误，服务器无法理解</td></tr><tr><td align="left">401</td><td align="left">Unauthorized</td><td align="left">请求要求用户的身份认证</td></tr><tr><td align="left">402</td><td align="left">Payment Required</td><td align="left">保留，将来使用</td></tr><tr><td align="left">403</td><td align="left">Forbidden</td><td align="left">服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td align="left">404</td><td align="left">Not Found</td><td align="left">服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td></tr><tr><td align="left">405</td><td align="left">Method Not Allowed</td><td align="left">客户端请求中的方法被禁止</td></tr><tr><td align="left">406</td><td align="left">Not Acceptable</td><td align="left">服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td align="left">407</td><td align="left">Proxy Authentication Required</td><td align="left">请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td align="left">408</td><td align="left">Request Time-out</td><td align="left">服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td align="left">409</td><td align="left">Conflict</td><td align="left">服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td align="left">410</td><td align="left">Gone</td><td align="left">客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td align="left">411</td><td align="left">Length Required</td><td align="left">服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td align="left">412</td><td align="left">Precondition Failed</td><td align="left">客户端请求信息的先决条件错误</td></tr><tr><td align="left">413</td><td align="left">Request Entity Too Large</td><td align="left">由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td align="left">414</td><td align="left">Request-URI Too Large</td><td align="left">请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td align="left">415</td><td align="left">Unsupported Media Type</td><td align="left">服务器无法处理请求附带的媒体格式</td></tr><tr><td align="left">416</td><td align="left">Requested range not satisfiable</td><td align="left">客户端请求的范围无效</td></tr><tr><td align="left">417</td><td align="left">Expectation Failed（预期失败）</td><td align="left">服务器无法满足请求头中 Expect 字段指定的预期行为。</td></tr><tr><td align="left">418</td><td align="left">I’m a teapot</td><td align="left">状态码 418 实际上是一个愚人节玩笑。它在 RFC 2324 中定义，该 RFC 是一个关于超文本咖啡壶控制协议（HTCPCP）的笑话文件。在这个笑话中，418 状态码是作为一个玩笑加入到 HTTP 协议中的。</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">500</td><td align="left">Internal Server Error</td><td align="left">服务器内部错误，无法完成请求</td></tr><tr><td align="left">501</td><td align="left">Not Implemented</td><td align="left">服务器不支持请求的功能，无法完成请求</td></tr><tr><td align="left">502</td><td align="left">Bad Gateway</td><td align="left">作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td align="left">503</td><td align="left">Service Unavailable</td><td align="left">由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td align="left">504</td><td align="left">Gateway Time-out</td><td align="left">充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td align="left">505</td><td align="left">HTTP Version not supported</td><td align="left">服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.14题</title>
    <link href="/blog/2025/01/16/1-14%E9%A2%98/"/>
    <url>/blog/2025/01/16/1-14%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一"><a href="#一" class="headerlink" title="一"></a>一<img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20250113220803960.png" alt="image-20250113220803960"></h1><p>感觉是答案和admin有关</p><p><img src="/blog/image/15.png" alt="15"></p><p>有个admin，only可能是1</p><p><img src="/blog/image/image-20250113221334435.png" alt="image-20250113221334435"></p><p>ctfhub{8ebefd0acf262a9ec4e56899}</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p><img src="/blog/image/image-20250113223353159.png" alt="image-20250113223353159"></p><p>先抓包</p><p><img src="/blog/image/image-20250113223516767.png" alt="image-20250113223516767"></p><p><img src="/blog/image/image-20250113223555832.png" alt="image-20250113223555832"></p><p>没有显示，诱人的give me flag 点击他！</p><p><img src="/blog/image/image-20250113223903668.png" alt="image-20250113223903668"></p><p>传给repeater</p><p><img src="/blog/image/image-20250113223934500.png" alt="image-20250113223934500"></p><p>ctfhub{ccdc59dd621497d091d70348}</p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p>先抓包</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20250113214639085.png" alt="image-20250113214639085"></p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20250113214744762.png" alt="image-20250113214744762"></p><p>放行是这个，说GET不行，用CTFHUB</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20250113214849184.png" alt="image-20250113214849184"></p><h1 id="四"><a href="#四" class="headerlink" title="四"></a>四</h1><p><img src="/blog/image/image-20250114160514796.png" alt="image-20250114160514796"></p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20250114160600036.png" alt="image-20250114160600036"></p><p>要解密这个，抓包看看</p><p><img src="/blog/image/image-20250114160600036.png" alt="image-20250114160600036"></p><p><img src="/blog/image/image-20250114162325436.png" alt="image-20250114162325436"></p><p>爆破，账户是admin,密码是附件</p><p><img src="/blog/image/image-20250114163630166.png" alt="image-20250114163630166"></p><p>将附件都弄成这样的形式（自己输入的账户和密码，解码的样子）</p><p>给到，Intruder爆破，</p><p>选好这个，ADD一下<img src="/blog/image/image-20250114172116276.png" alt="image-20250114172116276"></p><p><img src="/blog/image/image-20250114172139329.png" alt="image-20250114172139329"></p><p>选好文件，加个前缀，编码方式</p><p>ctfhub{4ee900d7609f99d4948ccb39}</p><p>选200的，再看response</p><p><img src="/blog/image/image-20250114172139329.png" alt="image-20250114172139329"></p><h1 id="五"><a href="#五" class="headerlink" title="五"></a>五</h1><p><img src="/blog/image/image-20250114172902100.png" alt="image-20250114172902100"></p><p>响应包源代码，我觉得可以直接检查，看她的源代码</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20250114172947684.png" alt="image-20250114172947684"></p><p> ctfhub{e728fd8a5b714b3fe0a44a6c} </p><h1 id="六"><a href="#六" class="headerlink" title="六"></a>六</h1><p>挨个目录<img src="/blog/image/image-20250114173700384.png" alt="image-20250114173700384">找（点开之后长得都一样，但是大标题会变，英语看不懂）</p><p><img src="/blog/image/image-20250114173935555.png" alt="image-20250114173935555"></p><p><img src="/blog/image/image-20250114173952622.png" alt="image-20250114173952622"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ctfhub</span>&#123;<span class="hljs-number">1433</span>c68ae0cec09d350f1eba&#125;<br></code></pre></td></tr></table></figure><h1 id="七"><a href="#七" class="headerlink" title="七"></a>七</h1><p><img src="/blog/image/image-20250114174204603.png" alt="image-20250114174204603"></p><p>东西有点多，感觉应该可以查找，试试看</p><p><img src="/blog/image/image-20250114174341067.png" alt="image-20250114174341067"></p><p><img src="/blog/image/image-20250114174418421.png" alt="image-20250114174418421"></p><h1 id="八"><a href="#八" class="headerlink" title="八"></a>八</h1><p><img src="/blog/image/image-20250114182720640.png" alt="image-20250114182720640"></p><p><img src="/blog/image/image-20250114182744342.png" alt="image-20250114182744342"></p><p>放到bp中挨个试，将文件名放在第一个，后缀在processing中add，还有个点</p><p><img src="/blog/image/image-20250114182819584.png" alt="image-20250114182819584"></p><p>将这个RAW 复制到proxy中，打开浏览器是个文件太好了！</p><p><img src="/blog/image/image-20250114183906999.png" alt="image-20250114183906999"></p><p>但是不好的是，点开这个flag是where is flag??(我真的崩溃了)（我从网上查找资料，说txt，也可以当作网站似的）<a href="http://challenge-56afe07f92cccdad.sandbox.ctfhub.com:10800/flag_263712747.txt%E6%89%93%E5%BC%80%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E5%BE%97%E5%88%B0">http://challenge-56afe07f92cccdad.sandbox.ctfhub.com:10800/flag_263712747.txt打开这个网站得到</a></p><p><img src="/blog/image/image-20250114184610094.png" alt="image-20250114184610094"></p><h1 id="九"><a href="#九" class="headerlink" title="九"></a>九</h1><p><img src="/blog/image/image-20250114185159465.png" alt="image-20250114185159465"></p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20250114185213672.png" alt="image-20250114185213672"></p><p>大概率是提示吧，什么在index.php里面</p><p>抓包试试</p><p><img src="/blog/image/image-20250114185213672.png" alt="image-20250114185213672"></p><p>结合一下上个题的经验，改一下，HTTp试试</p><p><img src="/blog/image/image-20250114185715385.png" alt="image-20250114185715385"></p><p>不行，题目是bak（投机取巧一下），在原链接后面加上&#x2F;index.php.bak试试</p><p><img src="/blog/image/image-20250114185916939.png" alt="image-20250114185916939"></p><p>芜湖，看起来有救了</p><p><img src="/blog/image/image-20250114190004486.png" alt="image-20250114190004486"></p><p>可以，把它放到文本文件里，拿下！</p><p>ctfhub{046a33d8e1d4bd024c25dc4e}</p><h1 id="十"><a href="#十" class="headerlink" title="十"></a>十</h1><p>不知道什么是vim编辑器，题目上说会异常关闭但是会有缓存</p><p>从网上查了</p><p><img src="/blog/image/image-20250114191347464.png" alt="image-20250114191347464"></p><p>用刚刚的方式试一下</p><p><img src="/blog/image/image-20250114191500506.png" alt="image-20250114191500506"></p><p>得到</p><p>ctfhub{3a1ba77e788214e7776c67ef}</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1.13题</title>
    <link href="/blog/2025/01/16/1-13%E9%A2%98/"/>
    <url>/blog/2025/01/16/1-13%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>攻击的协议在防火墙上面</p><p><img src="/blog/image/12.png" alt="12"></p><p>棱角</p><h1 id="内网"><a href="#内网" class="headerlink" title="内网"></a>内网</h1><p>内网(a,b,c)可以主动<img src="/blog/image/13.png" alt="13">找外网，但是外网不能主动找内网,外网只能找到那个圈那里</p><h2 id="nc的作用"><a href="#nc的作用" class="headerlink" title="nc的作用"></a>nc的作用</h2><p><img src="/blog/image/14.png" alt="14"></p><p><a href="https://blog.csdn.net/qq_40647372/article/details/132730351">Linux命令200例：nc非常有用的网络工具（常用）_nc命令-CSDN博客</a></p><h1 id="正反向问题"><a href="#正反向问题" class="headerlink" title="正反向问题"></a>正反向问题</h1><p>防火墙，入站严格，出站宽松</p><p>当防火墙打开时，尽可能让对方出来找我们</p><p>正反向指的是以谁为基本，对方写的东西来找我们，从他们的角度是正向，从我们的角度是反向</p><p>-FOfa</p><p>linux命令和cmd命令</p><p><a href="https://blog.csdn.net/weixin_51631278/article/details/123238981">关于cmd命令和Linux命令之间的区别差异_linux和cmd的区别-CSDN博客</a></p><h1 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h1><p><img src="/blog/image/image-20250113185800931.png" alt="image-20250113185800931"></p><p><img src="/blog/image/image-20250113185904393.png" alt="image-20250113185904393"></p><p><img src="/blog/image/image-20250113185946169.png" alt="image-20250113185946169"></p><p><img src="/blog/image/image-20250113190002408.png" alt="image-20250113190002408"></p><p><img src="/blog/image/image-20250113190031944.png" alt="image-20250113190031944"></p><h1 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h1><p>回旋，就是会告诉我们成没成功</p><p>在有的情况下没有回旋，就要用到这个</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>1-13</title>
    <link href="/blog/2025/01/16/1-13/"/>
    <url>/blog/2025/01/16/1-13/</url>
    
    <content type="html"><![CDATA[<h1 id="Proxy-代理"><a href="#Proxy-代理" class="headerlink" title="Proxy(代理)"></a>Proxy(代理)</h1><p>用来抓包</p><p><img src="/blog/image/1.png" alt="1"></p><p>1.open browser</p><p>输入个网<img src="/blog/image/2.png" alt="2">址</p><p>2.intercept is on &#x2F;off</p><p>拦截的作用</p><p><img src="/blog/image/3.png" alt="3"></p><p>3.forward放包（放行），drop丢包，action操作</p><h1 id="Intruder"><a href="#Intruder" class="headerlink" title="Intruder"></a>Intruder</h1><p>对数据包进行批量处理</p><p><img src="/blog/image/4.png" alt="4"></p><h1 id="repeater"><a href="#repeater" class="headerlink" title="repeater"></a>repeater</h1><p>和Intruder差不多，但是一次只能改一个</p><h1 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h1><h2 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h2><p>超文本传输协议（web浏览器和web服务器的通信的东西）</p><p><img src="/blog/image/5.png" alt="5"></p><p><img src="/blog/image/6.png" alt="6"></p><p><img src="/blog/image/7.png" alt="7"></p><p><img src="/blog/image/8.png" alt="8"></p><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><p><img src="/blog/image/9.png" alt="9"></p><p>先抓包</p><p><img src="/blog/image/10.png" alt="10"></p><p>放行是这个，说GET不行，用CTFHUB</p><p><img src="/blog/image/11.png" alt="11"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
